grammar TreetopParser

  rule statement
    assignment / expression
  end

  rule expression
    identifier / literal
  end

  rule identifier
    small_word / big_word
  end

  rule literal
    number / text / sequence / dictionary / block / multi_line_block
  end

  rule sequence
    '(' space? unbound_sequence? space? ')' <SequenceLiteral>
  end

  rule unbound_sequence
    (expression space)* expression <UnboundSequence>
  end

  rule dictionary
    '(' space? unbound_dictionary? space? ')' <DictionaryLiteral>
  end

  rule unbound_dictionary
    (pair space)* pair <UnboundDictionary>
  end

  rule pair
    setword_local expression <PairLiteral>
  end

  rule block
    '[' space* statement? (space '|' space statement)* space* ']' <BlockLiteral>
  end

  rule multi_line_block
    '[' blank* statement? (blank+ statement)*  blank* ']' <BlockMultiLiteral>
  end

  rule number
    [\d]+ <NumberLiteral>
  end

  rule text
    '"' ([^"\\] / "\\" . )* '"' <TextLiteral>
  end

  rule assignment
    setword expression <Assignment>
  end

  rule setword
    setword_local / setword_pathable
  end

  rule setword_local
    small_word ':' space? <SetwordLocal>
  end

  rule setword_pathable
    big_word ':' space? <SetwordPathable>
  end

  rule big_word
    big_alpha alpha alpha+
  end

  rule small_word
    small_char small_char small_char+
  end

  rule small_char
    small_alpha / '_'
  end

  rule big_alpha
    [A-Z]
  end

  rule small_alpha
    [a-z]
  end

  rule alpha
    [A-z]
  end

  rule blank
    space / newline
  end

  rule space
    ' '
  end

  rule newline
    "\n"
  end

  rule colon
    ':'
  end

end
